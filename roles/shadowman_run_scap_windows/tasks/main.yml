---
- name: Install OpenSCAP Scanner
  ansible.windows.win_package:
    path: https://github.com/OpenSCAP/openscap/releases/download/1.3.0/OpenSCAP-1.3.0-win32.msi
    product_id: '{6FA5F330-E7DD-47F9-9197-4C0F3B73B7FC}'
    arguments: /passive /norestart

- name: Install Visual Studio Package
  ansible.windows.win_package:
    path: https://aka.ms/vs/15/release/VC_redist.x86.exe
    product_id: '{624ba875-fdfc-4efa-9c66-b170dfebc3ec}'
    arguments:
      - /install
      - /passive
      - /norestart

- name: Copy options file needed for scan
  ansible.windows.win_copy:
    src: Windows_Server_2016_STIG.xml
    dest: C:\Program Files (x86)\OpenSCAP 1.3.0\Windows_Server_2016_STIG.xml

- name: Create Compliance Report
  ansible.windows.win_command: oscap.exe xccdf eval --profile xccdf_mil.disa.stig_profile_{{ profile }} --results C:\Users\ansible\report.xml --report C:\Users\ansible\index.html Windows_Server_2016_STIG.xml
  args:
    chdir: C:\Program Files (x86)\OpenSCAP 1.3.0\
  register: command_result
  failed_when: command_result.rc != 2

- name: Copy files to EE
  ansible.builtin.fetch:
    src: "C:\\Users\\ansible\\{{ item }}"
    dest: "/tmp/{{ inventory_hostname }}/"
    flat: true
  loop:
    - index.html
    - report.xml

- name: Copy folders to reports host
  ansible.builtin.copy:
    src: "/tmp/{{ inventory_hostname }}"
    dest: "{{ file_path }}"
    owner: root
    group: root
    mode: '0644'
  delegate_to: report-server.jmanuelcalvo.com

- name: DISPLAY LINK TO SCAP REPORT
  ansible.builtin.debug:
    msg: "http://report-server.jmanuelcalvo.com/openscap/{{ inventory_hostname }}"

- name: Get results
  ansible.builtin.slurp:
    src: "C:\\Users\\ansible\\report.xml"
  register: scap_report_file

- name: Set report facts
  ansible.builtin.set_fact:
    openscap_scan_results:
      benchmark_id: "{{ test_result['benchmark']['@id'] }}"
      total_rules_count: "{{ rule_result | length }}"
      score: "{{ test_result['score']['#text'] }}%"
      rule_results_count:
        notchecked: "{{ rule_result | json_query('@[?result==`notchecked`]') | length }}"
        fixed: "{{ rule_result | json_query('@[?result==`fixed`]') | length }}"
        error: "{{ rule_result | json_query('@[?result==`error`]') | length }}"
        notapplicable: "{{ rule_result | json_query('@[?result==`notapplicable`]') | length }}"
        informational: "{{ rule_result | json_query('@[?result==`informational`]') | length }}"
        unknown: "{{ rule_result | json_query('@[?result==`unknown`]') | length }}"
        fail: "{{ rule_result | json_query('@[?result==`fail`]') | length }}"
        pass: "{{ rule_result | json_query('@[?result==`pass`]') | length }}"
      severity_of_failed_rules_count:
        low: "{{ rule_result | json_query('@[?result==`fail`]') | selectattr('@severity', 'equalto', 'low') | list | length }}"
        medium: "{{ rule_result | json_query('@[?result==`fail`]') | selectattr('@severity', 'equalto', 'medium') | list | length }}"
        high: "{{ rule_result | json_query('@[?result==`fail`]') | selectattr('@severity', 'equalto', 'high') | list | length }}"
    cacheable: true
  vars:
    report_from_xml: "{{ scap_report_file['content'] | b64decode | ansible.utils.from_xml | replace('{http://checklists.nist.gov/xccdf/1.2}', '') }}"
    test_result: "{{ report_from_xml['Benchmark']['TestResult'] }}"
    rule_result: "{{ test_result['rule-result'] }}"

# we set the security_compliance based on some condition
# in real world, you can have additional conditions
- name: Set security compliance status
  ansible.builtin.set_fact:
    security_compliance:
      status: "{{ true if ((openscap_scan_results.severity_of_failed_rules_count.high | int) < 10) else false }}"
      type: "{{ profile }}"
    cacheable: true

- name: Create directory for windows summary report
  ansible.builtin.file:
    path: "{{ file_path }}/windowssummary"
    state: directory
    mode: '0755'
    owner: root
    group: root
  delegate_to: report-server.jmanuelcalvo.com
  run_once: true

- name: Template Summary Report
  ansible.builtin.template:
    src: "scan_reports.html.j2"
    dest: "{{ file_path }}/windowssummary/index.html"
    owner: root
    group: root
    mode: '0644'
  delegate_to: report-server.jmanuelcalvo.com
  run_once: true

- name: DISPLAY LINK TO SUMMARY REPORT
  ansible.builtin.debug:
    msg: "http://report-server.jmanuelcalvo.com/openscap/windowssummary/"
  run_once: true

- name: Template Summary Report for e-mail
  ansible.builtin.template:
    src: "scan_reports.html.j2"
    dest: "/tmp/windows{{ ansible_date_time.iso8601 }}.html"
    owner: root
    group: root
    mode: '0644'
  delegate_to: localhost
  run_once: true
  when: sendemailreport

- name: Send Report via E-mail
  community.general.mail:
    host: "{{ EMAIL_HOST }}"
    username: "{{ EMAIL_USERNAME }}"
    password: "{{ EMAIL_PASSWORD }}"
    port: "{{ EMAIL_PORT }}"
    subject: "Windows Scan Report"
    body: "Windows Compliance Scan Completed, please see the attached report"
    attach:
      - /tmp/windows{{ ansible_date_time.iso8601 }}.html
    from: "{{ email_from }}"
    to: "{{ email_to }}"
  delegate_to: localhost
  run_once: true
  become: false
  when: sendemailreport
